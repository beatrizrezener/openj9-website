{"version":3,"sources":["webpack:///./src/pages/news.js"],"names":["data","isHome","sx","backgroundColor","paddingX","paddingY","h1","p","display","flexWrap","justifyContent","borderRadius","flex","maxWidth","minWidth","h5","minHeight","width","isLink","text","primary","marginY","allUpcomingEventsYaml","edges","map","event","listStyleType","node","title","date","details","flexDirection","query"],"mappings":"2FAAA,2GAQe,0BAAEA,EAAF,EAAEA,KAAF,OACb,YAAC,IAAD,CAAQC,QAAQ,GACd,mBAAKC,GAAI,CAAEC,gBAAiB,UAAWC,SAAU,MAAOC,SAAU,OAChE,YAAC,IAAOC,GAAR,6BACA,mBACEJ,GAAI,CACFG,SAAU,EACVD,SAAU,OAGZ,YAAC,IAAOG,EAAR,8RAQJ,mBACEL,GAAI,CACFE,SAAU,MACVC,SAAU,EACVF,gBAAiB,YAGnB,mBACED,GAAI,CACFM,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBP,gBAAiB,QACjBC,SAAU,KACVC,SAAU,KACVM,aAAc,SAGhB,uBACET,GAAI,CACFU,KAAM,UACNC,SAAU,QACVC,SAAU,CAAC,QAAS,QAAS,QAAS,WAGxC,YAAC,IAAOC,GAAR,yBACA,YAAC,IAAOR,EAAR,CAAUL,GAAI,CAACc,UAAW,QAASC,MAAM,QAAzC,0RAGA,YAAC,IAAD,CAAQC,QAAQ,EAAMC,KAAK,mBAAmBC,SAAS,KAEzD,uBACElB,GAAI,CACFU,KAAM,UACNC,SAAU,QACVC,SAAU,CAAC,QAAS,QAAS,QAAS,SAElCO,QAAS,CAAC,OAAQ,OAAQ,IAAK,OAGrC,YAAC,IAAON,GAAR,eAEE,kBAAIb,GAAI,CAACc,UAAW,UACjBhB,EAAKsB,sBAAsBC,MAAMC,KAAI,SAACC,GACrC,OAAO,kBAAIvB,GAAI,CAACwB,cAAe,SAAxB,IAAmCD,EAAME,KAAKC,MAA9C,MAAwDH,EAAME,KAAKE,KAAnE,MAA4EJ,EAAME,KAAKG,eAQxG,mBACE5B,GAAI,CACFM,QAAS,OACTuB,cAAe,SACf3B,SAAU,KACVC,SAAU,OAGZ,YAAC,IAAOU,GAAR,qBACA,mBAAKb,GAAI,CAACM,QAAS,OAAQC,SAAU,OAAQC,eAAgB,kBAC3D,uBACAR,GAAI,CACFU,KAAM,UACNC,SAAU,QACVC,SAAU,CAAC,QAAS,QAAS,QAAS,WAIxC,YAAC,IAAOP,EAAR,CAAUL,GAAI,CAACe,MAAM,QAArB,4OAKF,uBACEf,GAAI,CACFU,KAAM,UACNC,SAAU,QACVC,SAAU,CAAC,QAAS,QAAS,QAAS,WAGxC,YAAC,IAAOP,EAAR,CAAUL,GAAI,CAACe,MAAM,QAArB,gOAQJ,mBAAKf,GAAI,CAACM,QAAS,CAAC,QAAS,QAAS,QAAS,QAASE,eAAgB,SAAUN,SAAU,OAC1F,YAAC,IAAD,CAAQc,QAAQ,EAAMC,KAAK,gBAAgBC,SAAS,QAOrD,IAAMY,EAAK","file":"component---src-pages-news-js-106356103f18d3224fac.js","sourcesContent":["import Layout from \"../components/layout\";\nimport { graphql } from 'gatsby'\n\n/** @jsx jsx */\nimport { jsx, Styled } from \"theme-ui\";\n\nimport Button from \"../components/button\";\n\nexport default ({data}) => (\n  <Layout isHome={false}>\n    <div sx={{ backgroundColor: \"#F5F9FC\", paddingX: \"10%\", paddingY: \"5%\" }}>\n      <Styled.h1>What’s new in OpenJ9</Styled.h1>\n      <div\n        sx={{\n          paddingY: 5,\n          paddingX: \"5%\",\n        }}\n      >\n        <Styled.p>\n        This text should be the introduction of the overall purpose of this page.\n        It might also be beneficial to use this text to do other things.\n        To identify other important details to include in this text we can begin discussing the goals that this page will help users accomplish.\n        </Styled.p>\n      </div>\n    </div>\n\n    <div\n      sx={{\n        paddingX: \"10%\",\n        paddingY: 5,\n        backgroundColor: \"#F5F9FC\",\n      }}\n    >\n      <div\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          backgroundColor: \"white\",\n          paddingX: \"5%\",\n          paddingY: \"5%\",\n          borderRadius: \"card\"        \n        }}\n      >\n        <article\n          sx={{\n            flex: \"0 0 30%\",\n            maxWidth: \"600px\",\n            minWidth: [\"300px\", \"350px\", \"400px\", \"500px\"]\n          }}\n        >\n          <Styled.h5>Products Updates</Styled.h5>\n          <Styled.p sx={{minHeight: \"15rem\", width:\"90%\"}}>\n          This text should be the introduction of the most recent udpate about the product. We might also want to consider using tags or something as a way to draw additional attention to topics not introduced in the product update lead-in.  Ultimately this should lead to a GIT Hub page. \n          </Styled.p>\n          <Button isLink={true} text=\"NEW RELEASE INFO\" primary={false} />\n        </article>\n        <article\n          sx={{\n            flex: \"0 0 30%\",\n            maxWidth: \"600px\",\n            minWidth: [\"300px\", \"350px\", \"400px\", \"500px\"],\n            \n                marginY: [\"3rem\", \"3rem\", \"0\", \"0\"],\n          }}\n        >\n          <Styled.h5 \n          >Events</Styled.h5>\n            <ul sx={{minHeight: \"17rem\"}}>\n              {data.allUpcomingEventsYaml.edges.map((event) => {\n                return <li sx={{listStyleType: \"none\"}}> {event.node.title} - {event.node.date} - {event.node.details}</li>\n              })}\n            </ul>\n        \n          \n        </article>\n      </div>\n\n      <div\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingX: \"5%\",\n          paddingY: \"5%\",      \n        }}\n      >\n        <Styled.h5>Recent Blogs</Styled.h5>\n        <div sx={{display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-between\"}}>\n          <article\n          sx={{\n            flex: \"0 0 30%\",\n            maxWidth: \"600px\",\n            minWidth: [\"300px\", \"350px\", \"400px\", \"500px\"]\n          }}\n        >\n          \n          <Styled.p sx={{width:\"90%\"}}>\n            Blog title here - MM-DD-YY (Most Recent)\n            This text should be the first few sentences for this blog post. We might also want to consider using tags or something as a way to draw additional attention to topics not introduced…see more\n          </Styled.p>\n        </article>\n        <article\n          sx={{\n            flex: \"0 0 30%\",\n            maxWidth: \"600px\",\n            minWidth: [\"300px\", \"350px\", \"400px\", \"500px\"],\n          }}\n        >\n          <Styled.p sx={{width:\"90%\"}}>\n            Blog title here - MM-DD-YY\n            This text should be the first few sentences for this blog post. We might also want to consider using tags or something as a way to draw additional attention to topics not introduced…see more\n          </Styled.p>\n        </article>\n        </div>\n        \n      </div>\n      <div sx={{display: [\"block\", \"block\", \"block\", \"flex\"], justifyContent: \"center\", paddingX: \"5%\",}}>\n        <Button isLink={true} text=\"SEE ALL BLOGS\" primary={false} />\n      </div>\n      \n    </div>\n  </Layout>\n);\n\nexport const query = graphql`\n{\n  allUpcomingEventsYaml(sort: {fields: date, order: ASC} limit: 5) {\n    edges {\n      node {\n        id\n        title\n        date(formatString:\"DD-MM-YYYY\")\n        details\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}